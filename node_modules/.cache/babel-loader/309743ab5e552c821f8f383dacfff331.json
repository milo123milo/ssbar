{"ast":null,"code":"/*!\n  * @intlify/core-base v9.1.9\n  * (c) 2021 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { format, isString, isArray, isPlainObject, assign, isFunction, isBoolean, isRegExp, warn, isObject, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey, isNumber, isEmptyObject, isDate, getGlobalThis } from '@intlify/shared';\nimport { resolveValue } from '@intlify/message-resolver';\nexport * from '@intlify/message-resolver';\nimport { createMessageContext } from '@intlify/runtime';\nexport * from '@intlify/runtime';\nimport { defaultOnError, baseCompile, createCompileError } from '@intlify/message-compiler';\nexport { createCompileError } from '@intlify/message-compiler';\nimport { IntlifyDevToolsHooks } from '@intlify/devtools-if';\nlet devtools = null;\n\nfunction setDevToolsHook(hook) {\n  devtools = hook;\n}\n\nfunction getDevToolsHook() {\n  return devtools;\n}\n\nfunction initI18nDevTools(i18n, version, meta) {\n  // TODO: queue if devtools is undefined\n  devtools && devtools.emit(IntlifyDevToolsHooks.I18nInit, {\n    timestamp: Date.now(),\n    i18n,\n    version,\n    meta\n  });\n}\n\nconst translateDevTools = /* #__PURE__*/createDevToolsHook(IntlifyDevToolsHooks.FunctionTranslate);\n\nfunction createDevToolsHook(hook) {\n  return payloads => devtools && devtools.emit(hook, payloads);\n}\n/** @internal */\n\n\nconst warnMessages = {\n  [0\n  /* NOT_FOUND_KEY */\n  ]: `Not found '{key}' key in '{locale}' locale messages.`,\n  [1\n  /* FALLBACK_TO_TRANSLATE */\n  ]: `Fall back to translate '{key}' key with '{target}' locale.`,\n  [2\n  /* CANNOT_FORMAT_NUMBER */\n  ]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n  [3\n  /* FALLBACK_TO_NUMBER_FORMAT */\n  ]: `Fall back to number format '{key}' key with '{target}' locale.`,\n  [4\n  /* CANNOT_FORMAT_DATE */\n  ]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n  [5\n  /* FALLBACK_TO_DATE_FORMAT */\n  ]: `Fall back to datetime format '{key}' key with '{target}' locale.`\n};\n\nfunction getWarnMessage(code, ...args) {\n  return format(warnMessages[code], ...args);\n}\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\n\n\nconst VERSION = '9.1.9';\nconst NOT_REOSLVED = -1;\nconst MISSING_RESOLVE_VALUE = '';\n\nfunction getDefaultLinkedModifiers() {\n  return {\n    upper: val => isString(val) ? val.toUpperCase() : val,\n    lower: val => isString(val) ? val.toLowerCase() : val,\n    // prettier-ignore\n    capitalize: val => isString(val) ? `${val.charAt(0).toLocaleUpperCase()}${val.substr(1)}` : val\n  };\n}\n\nlet _compiler;\n\nfunction registerMessageCompiler(compiler) {\n  _compiler = compiler;\n} // Additional Meta for Intlify DevTools\n\n\nlet _additionalMeta = null;\n\nconst setAdditionalMeta = /* #__PURE__*/meta => {\n  _additionalMeta = meta;\n};\n\nconst getAdditionalMeta = /* #__PURE__*/() => _additionalMeta; // ID for CoreContext\n\n\nlet _cid = 0;\n\nfunction createCoreContext(options = {}) {\n  // setup options\n  const version = isString(options.version) ? options.version : VERSION;\n  const locale = isString(options.locale) ? options.locale : 'en-US';\n  const fallbackLocale = isArray(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || isString(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : locale;\n  const messages = isPlainObject(options.messages) ? options.messages : {\n    [locale]: {}\n  };\n  const datetimeFormats = isPlainObject(options.datetimeFormats) ? options.datetimeFormats : {\n    [locale]: {}\n  };\n  const numberFormats = isPlainObject(options.numberFormats) ? options.numberFormats : {\n    [locale]: {}\n  };\n  const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\n  const pluralRules = options.pluralRules || {};\n  const missing = isFunction(options.missing) ? options.missing : null;\n  const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;\n  const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;\n  const fallbackFormat = !!options.fallbackFormat;\n  const unresolving = !!options.unresolving;\n  const postTranslation = isFunction(options.postTranslation) ? options.postTranslation : null;\n  const processor = isPlainObject(options.processor) ? options.processor : null;\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n  const escapeParameter = !!options.escapeParameter;\n  const messageCompiler = isFunction(options.messageCompiler) ? options.messageCompiler : _compiler;\n  const onWarn = isFunction(options.onWarn) ? options.onWarn : warn; // setup internal options\n\n  const internalOptions = options;\n\n  const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters) ? internalOptions.__datetimeFormatters : new Map();\n\n  const __numberFormatters = isObject(internalOptions.__numberFormatters) ? internalOptions.__numberFormatters : new Map();\n\n  const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n\n  _cid++;\n  const context = {\n    version,\n    cid: _cid,\n    locale,\n    fallbackLocale,\n    messages,\n    datetimeFormats,\n    numberFormats,\n    modifiers,\n    pluralRules,\n    missing,\n    missingWarn,\n    fallbackWarn,\n    fallbackFormat,\n    unresolving,\n    postTranslation,\n    processor,\n    warnHtmlMessage,\n    escapeParameter,\n    messageCompiler,\n    onWarn,\n    __datetimeFormatters,\n    __numberFormatters,\n    __meta\n  }; // for vue-devtools timeline event\n\n  if (process.env.NODE_ENV !== 'production') {\n    context.__v_emitter = internalOptions.__v_emitter != null ? internalOptions.__v_emitter : undefined;\n  } // NOTE: experimental !!\n\n\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    initI18nDevTools(context, version, __meta);\n  }\n\n  return context;\n}\n/** @internal */\n\n\nfunction isTranslateFallbackWarn(fallback, key) {\n  return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\n\n\nfunction isTranslateMissingWarn(missing, key) {\n  return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\n\n\nfunction handleMissing(context, key, locale, missingWarn, type) {\n  const {\n    missing,\n    onWarn\n  } = context; // for vue-devtools timeline event\n\n  if (process.env.NODE_ENV !== 'production') {\n    const emitter = context.__v_emitter;\n\n    if (emitter) {\n      emitter.emit(\"missing\"\n      /* MISSING */\n      , {\n        locale,\n        key,\n        type,\n        groupId: `${type}:${key}`\n      });\n    }\n  }\n\n  if (missing !== null) {\n    const ret = missing(context, locale, key, type);\n    return isString(ret) ? ret : key;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && isTranslateMissingWarn(missingWarn, key)) {\n      onWarn(getWarnMessage(0\n      /* NOT_FOUND_KEY */\n      , {\n        key,\n        locale\n      }));\n    }\n\n    return key;\n  }\n}\n/** @internal */\n\n\nfunction getLocaleChain(ctx, fallback, start) {\n  const context = ctx;\n\n  if (!context.__localeChainCache) {\n    context.__localeChainCache = new Map();\n  }\n\n  let chain = context.__localeChainCache.get(start);\n\n  if (!chain) {\n    chain = []; // first block defined by start\n\n    let block = [start]; // while any intervening block found\n\n    while (isArray(block)) {\n      block = appendBlockToChain(chain, block, fallback);\n    } // prettier-ignore\n    // last block defined by default\n\n\n    const defaults = isArray(fallback) ? fallback : isPlainObject(fallback) ? fallback['default'] ? fallback['default'] : null : fallback; // convert defaults to array\n\n    block = isString(defaults) ? [defaults] : defaults;\n\n    if (isArray(block)) {\n      appendBlockToChain(chain, block, false);\n    }\n\n    context.__localeChainCache.set(start, chain);\n  }\n\n  return chain;\n}\n\nfunction appendBlockToChain(chain, block, blocks) {\n  let follow = true;\n\n  for (let i = 0; i < block.length && isBoolean(follow); i++) {\n    const locale = block[i];\n\n    if (isString(locale)) {\n      follow = appendLocaleToChain(chain, block[i], blocks);\n    }\n  }\n\n  return follow;\n}\n\nfunction appendLocaleToChain(chain, locale, blocks) {\n  let follow;\n  const tokens = locale.split('-');\n\n  do {\n    const target = tokens.join('-');\n    follow = appendItemToChain(chain, target, blocks);\n    tokens.splice(-1, 1);\n  } while (tokens.length && follow === true);\n\n  return follow;\n}\n\nfunction appendItemToChain(chain, target, blocks) {\n  let follow = false;\n\n  if (!chain.includes(target)) {\n    follow = true;\n\n    if (target) {\n      follow = target[target.length - 1] !== '!';\n      const locale = target.replace(/!/g, '');\n      chain.push(locale);\n\n      if ((isArray(blocks) || isPlainObject(blocks)) && blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        follow = blocks[locale];\n      }\n    }\n  }\n\n  return follow;\n}\n/** @internal */\n\n\nfunction updateFallbackLocale(ctx, locale, fallback) {\n  const context = ctx;\n  context.__localeChainCache = new Map();\n  getLocaleChain(ctx, fallback, locale);\n}\n\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\n\nfunction checkHtmlMessage(source, options) {\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n\n  if (warnHtmlMessage && RE_HTML_TAG.test(source)) {\n    warn(format(WARN_MESSAGE, {\n      source\n    }));\n  }\n}\n\nconst defaultOnCacheKey = source => source;\n\nlet compileCache = Object.create(null);\n\nfunction clearCompileCache() {\n  compileCache = Object.create(null);\n}\n\nfunction compileToFunction(source, options = {}) {\n  {\n    // check HTML message\n    process.env.NODE_ENV !== 'production' && checkHtmlMessage(source, options); // check caches\n\n    const onCacheKey = options.onCacheKey || defaultOnCacheKey;\n    const key = onCacheKey(source);\n    const cached = compileCache[key];\n\n    if (cached) {\n      return cached;\n    } // compile error detecting\n\n\n    let occurred = false;\n    const onError = options.onError || defaultOnError;\n\n    options.onError = err => {\n      occurred = true;\n      onError(err);\n    }; // compile\n\n\n    const {\n      code\n    } = baseCompile(source, options); // evaluate function\n\n    const msg = new Function(`return ${code}`)(); // if occurred compile error, don't cache\n\n    return !occurred ? compileCache[key] = msg : msg;\n  }\n}\n\nfunction createCoreError(code) {\n  return createCompileError(code, null, process.env.NODE_ENV !== 'production' ? {\n    messages: errorMessages\n  } : undefined);\n}\n/** @internal */\n\n\nconst errorMessages = {\n  [14\n  /* INVALID_ARGUMENT */\n  ]: 'Invalid arguments',\n  [15\n  /* INVALID_DATE_ARGUMENT */\n  ]: 'The date provided is an invalid Date object.' + 'Make sure your Date represents a valid date.',\n  [16\n  /* INVALID_ISO_DATE_ARGUMENT */\n  ]: 'The argument provided is not a valid ISO date string'\n};\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\n\nconst isMessageFunction = val => isFunction(val); // implementation of `translate` function\n\n\nfunction translate(context, ...args) {\n  const {\n    fallbackFormat,\n    postTranslation,\n    unresolving,\n    fallbackLocale,\n    messages\n  } = context;\n  const [key, options] = parseTranslateArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const escapeParameter = isBoolean(options.escapeParameter) ? options.escapeParameter : context.escapeParameter;\n  const resolvedMessage = !!options.resolvedMessage; // prettier-ignore\n\n  const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n  ? !isBoolean(options.default) ? options.default : key : fallbackFormat // default by `fallbackFormat` option\n  ? key : '';\n  const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\n  const locale = isString(options.locale) ? options.locale : context.locale; // escape params\n\n  escapeParameter && escapeParams(options); // resolve message format\n  // eslint-disable-next-line prefer-const\n\n  let [format, targetLocale, message] = !resolvedMessage ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) : [key, locale, messages[locale] || {}]; // if you use default message, set it as message format!\n\n  let cacheBaseKey = key;\n\n  if (!resolvedMessage && !(isString(format) || isMessageFunction(format))) {\n    if (enableDefaultMsg) {\n      format = defaultMsgOrKey;\n      cacheBaseKey = format;\n    }\n  } // checking message format and target locale\n\n\n  if (!resolvedMessage && (!(isString(format) || isMessageFunction(format)) || !isString(targetLocale))) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && isString(format) && context.messageCompiler == null) {\n    warn(`The message format compilation is not supported in this build. ` + `Because message compiler isn't included. ` + `You need to pre-compilation all message format. ` + `So translate function return '${key}'.`);\n    return key;\n  } // setup compile error detecting\n\n\n  let occurred = false;\n\n  const errorDetector = () => {\n    occurred = true;\n  }; // compile message format\n\n\n  const msg = !isMessageFunction(format) ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) : format; // if occurred compile error, return the message format\n\n  if (occurred) {\n    return format;\n  } // evaluate message with context\n\n\n  const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n  const msgContext = createMessageContext(ctxOptions);\n  const messaged = evaluateMessage(context, msg, msgContext); // if use post translation option, proceed it with handler\n\n  const ret = postTranslation ? postTranslation(messaged) : messaged; // NOTE: experimental !!\n\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    // prettier-ignore\n    const payloads = {\n      timestamp: Date.now(),\n      key: isString(key) ? key : isMessageFunction(format) ? format.key : '',\n      locale: targetLocale || (isMessageFunction(format) ? format.locale : ''),\n      format: isString(format) ? format : isMessageFunction(format) ? format.source : '',\n      message: ret\n    };\n    payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n    translateDevTools(payloads);\n  }\n\n  return ret;\n}\n\nfunction escapeParams(options) {\n  if (isArray(options.list)) {\n    options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n  } else if (isObject(options.named)) {\n    Object.keys(options.named).forEach(key => {\n      if (isString(options.named[key])) {\n        options.named[key] = escapeHtml(options.named[key]);\n      }\n    });\n  }\n}\n\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n  const {\n    messages,\n    onWarn\n  } = context;\n  const locales = getLocaleChain(context, fallbackLocale, locale);\n  let message = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'translate';\n\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(1\n      /* FALLBACK_TO_TRANSLATE */\n      , {\n        key,\n        target: targetLocale\n      }));\n    } // for vue-devtools timeline event\n\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n\n      if (emitter) {\n        emitter.emit(\"fallback\"\n        /* FALBACK */\n        , {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n\n    message = messages[targetLocale] || {}; // for vue-devtools timeline event\n\n    let start = null;\n    let startTag;\n    let endTag;\n\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      start = window.performance.now();\n      startTag = 'intlify-message-resolve-start';\n      endTag = 'intlify-message-resolve-end';\n      mark && mark(startTag);\n    }\n\n    if ((format = resolveValue(message, key)) === null) {\n      // if null, resolve with object key path\n      format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n    } // for vue-devtools timeline event\n\n\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      const end = window.performance.now();\n      const emitter = context.__v_emitter;\n\n      if (emitter && start && format) {\n        emitter.emit(\"message-resolve\"\n        /* MESSAGE_RESOLVE */\n        , {\n          type: \"message-resolve\"\n          /* MESSAGE_RESOLVE */\n          ,\n          key,\n          message: format,\n          time: end - start,\n          groupId: `${type}:${key}`\n        });\n      }\n\n      if (startTag && endTag && mark && measure) {\n        mark(endTag);\n        measure('intlify message resolve', startTag, endTag);\n      }\n    }\n\n    if (isString(format) || isFunction(format)) break;\n    const missingRet = handleMissing(context, key, targetLocale, missingWarn, type);\n\n    if (missingRet !== key) {\n      format = missingRet;\n    }\n\n    from = to;\n  }\n\n  return [format, targetLocale, message];\n}\n\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) {\n  const {\n    messageCompiler,\n    warnHtmlMessage\n  } = context;\n\n  if (isMessageFunction(format)) {\n    const msg = format;\n    msg.locale = msg.locale || targetLocale;\n    msg.key = msg.key || key;\n    return msg;\n  } // for vue-devtools timeline event\n\n\n  let start = null;\n  let startTag;\n  let endTag;\n\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-compilation-start';\n    endTag = 'intlify-message-compilation-end';\n    mark && mark(startTag);\n  }\n\n  const msg = messageCompiler(format, getCompileOptions(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, errorDetector)); // for vue-devtools timeline event\n\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n\n    if (emitter && start) {\n      emitter.emit(\"message-compilation\"\n      /* MESSAGE_COMPILATION */\n      , {\n        type: \"message-compilation\"\n        /* MESSAGE_COMPILATION */\n        ,\n        message: format,\n        time: end - start,\n        groupId: `${'translate'}:${key}`\n      });\n    }\n\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message compilation', startTag, endTag);\n    }\n  }\n\n  msg.locale = targetLocale;\n  msg.key = key;\n  msg.source = format;\n  return msg;\n}\n\nfunction evaluateMessage(context, msg, msgCtx) {\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-evaluation-start';\n    endTag = 'intlify-message-evaluation-end';\n    mark && mark(startTag);\n  }\n\n  const messaged = msg(msgCtx); // for vue-devtools timeline event\n\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n\n    if (emitter && start) {\n      emitter.emit(\"message-evaluation\"\n      /* MESSAGE_EVALUATION */\n      , {\n        type: \"message-evaluation\"\n        /* MESSAGE_EVALUATION */\n        ,\n        value: messaged,\n        time: end - start,\n        groupId: `${'translate'}:${msg.key}`\n      });\n    }\n\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message evaluation', startTag, endTag);\n    }\n  }\n\n  return messaged;\n}\n/** @internal */\n\n\nfunction parseTranslateArgs(...args) {\n  const [arg1, arg2, arg3] = args;\n  const options = {};\n\n  if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1)) {\n    throw createCoreError(14\n    /* INVALID_ARGUMENT */\n    );\n  } // prettier-ignore\n\n\n  const key = isNumber(arg1) ? String(arg1) : isMessageFunction(arg1) ? arg1 : arg1;\n\n  if (isNumber(arg2)) {\n    options.plural = arg2;\n  } else if (isString(arg2)) {\n    options.default = arg2;\n  } else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n    options.named = arg2;\n  } else if (isArray(arg2)) {\n    options.list = arg2;\n  }\n\n  if (isNumber(arg3)) {\n    options.plural = arg3;\n  } else if (isString(arg3)) {\n    options.default = arg3;\n  } else if (isPlainObject(arg3)) {\n    assign(options, arg3);\n  }\n\n  return [key, options];\n}\n\nfunction getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {\n  return {\n    warnHtmlMessage,\n    onError: err => {\n      errorDetector && errorDetector(err);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const message = `Message compilation error: ${err.message}`;\n        const codeFrame = err.location && generateCodeFrame(source, err.location.start.offset, err.location.end.offset);\n        const emitter = context.__v_emitter;\n\n        if (emitter) {\n          emitter.emit(\"compile-error\"\n          /* COMPILE_ERROR */\n          , {\n            message: source,\n            error: err.message,\n            start: err.location && err.location.start.offset,\n            end: err.location && err.location.end.offset,\n            groupId: `${'translate'}:${key}`\n          });\n        }\n\n        console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n      } else {\n        throw err;\n      }\n    },\n    onCacheKey: source => generateFormatCacheKey(locale, key, source)\n  };\n}\n\nfunction getMessageContextOptions(context, locale, message, options) {\n  const {\n    modifiers,\n    pluralRules\n  } = context;\n\n  const resolveMessage = key => {\n    const val = resolveValue(message, key);\n\n    if (isString(val)) {\n      let occurred = false;\n\n      const errorDetector = () => {\n        occurred = true;\n      };\n\n      const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);\n      return !occurred ? msg : NOOP_MESSAGE_FUNCTION;\n    } else if (isMessageFunction(val)) {\n      return val;\n    } else {\n      // TODO: should be implemented warning message\n      return NOOP_MESSAGE_FUNCTION;\n    }\n  };\n\n  const ctxOptions = {\n    locale,\n    modifiers,\n    pluralRules,\n    messages: resolveMessage\n  };\n\n  if (context.processor) {\n    ctxOptions.processor = context.processor;\n  }\n\n  if (options.list) {\n    ctxOptions.list = options.list;\n  }\n\n  if (options.named) {\n    ctxOptions.named = options.named;\n  }\n\n  if (isNumber(options.plural)) {\n    ctxOptions.pluralIndex = options.plural;\n  }\n\n  return ctxOptions;\n}\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n  dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n  numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n}; // implementation of `datetime` function\n\nfunction datetime(context, ...args) {\n  const {\n    datetimeFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn\n  } = context;\n  const {\n    __datetimeFormatters\n  } = context;\n\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.dateTimeFormat) {\n    onWarn(getWarnMessage(4\n    /* CANNOT_FORMAT_DATE */\n    ));\n    return MISSING_RESOLVE_VALUE;\n  }\n\n  const [key, value, options, overrides] = parseDateTimeArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = isString(options.locale) ? options.locale : context.locale;\n  const locales = getLocaleChain(context, fallbackLocale, locale);\n\n  if (!isString(key) || key === '') {\n    return new Intl.DateTimeFormat(locale).format(value);\n  } // resolve format\n\n\n  let datetimeFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'datetime format';\n\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(5\n      /* FALLBACK_TO_DATE_FORMAT */\n      , {\n        key,\n        target: targetLocale\n      }));\n    } // for vue-devtools timeline event\n\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n\n      if (emitter) {\n        emitter.emit(\"fallback\"\n        /* FALBACK */\n        , {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n\n    datetimeFormat = datetimeFormats[targetLocale] || {};\n    format = datetimeFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type);\n    from = to;\n  } // checking format and target locale\n\n\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n\n  let id = `${targetLocale}__${key}`;\n\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n\n  let formatter = __datetimeFormatters.get(id);\n\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n\n    __datetimeFormatters.set(id, formatter);\n  }\n\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\n\n\nfunction parseDateTimeArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  let options = {};\n  let overrides = {};\n  let value;\n\n  if (isString(arg1)) {\n    // Only allow ISO strings - other date formats are often supported,\n    // but may cause different results in different browsers.\n    if (!/\\d{4}-\\d{2}-\\d{2}(T.*)?/.test(arg1)) {\n      throw createCoreError(16\n      /* INVALID_ISO_DATE_ARGUMENT */\n      );\n    }\n\n    value = new Date(arg1);\n\n    try {\n      // This will fail if the date is not valid\n      value.toISOString();\n    } catch (e) {\n      throw createCoreError(16\n      /* INVALID_ISO_DATE_ARGUMENT */\n      );\n    }\n  } else if (isDate(arg1)) {\n    if (isNaN(arg1.getTime())) {\n      throw createCoreError(15\n      /* INVALID_DATE_ARGUMENT */\n      );\n    }\n\n    value = arg1;\n  } else if (isNumber(arg1)) {\n    value = arg1;\n  } else {\n    throw createCoreError(14\n    /* INVALID_ARGUMENT */\n    );\n  }\n\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    options = arg2;\n  }\n\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\n\n\nfunction clearDateTimeFormat(ctx, locale, format) {\n  const context = ctx;\n\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n\n    if (!context.__datetimeFormatters.has(id)) {\n      continue;\n    }\n\n    context.__datetimeFormatters.delete(id);\n  }\n} // implementation of `number` function\n\n\nfunction number(context, ...args) {\n  const {\n    numberFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn\n  } = context;\n  const {\n    __numberFormatters\n  } = context;\n\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.numberFormat) {\n    onWarn(getWarnMessage(2\n    /* CANNOT_FORMAT_NUMBER */\n    ));\n    return MISSING_RESOLVE_VALUE;\n  }\n\n  const [key, value, options, overrides] = parseNumberArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = isString(options.locale) ? options.locale : context.locale;\n  const locales = getLocaleChain(context, fallbackLocale, locale);\n\n  if (!isString(key) || key === '') {\n    return new Intl.NumberFormat(locale).format(value);\n  } // resolve format\n\n\n  let numberFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'number format';\n\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(3\n      /* FALLBACK_TO_NUMBER_FORMAT */\n      , {\n        key,\n        target: targetLocale\n      }));\n    } // for vue-devtools timeline event\n\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n\n      if (emitter) {\n        emitter.emit(\"fallback\"\n        /* FALBACK */\n        , {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n\n    numberFormat = numberFormats[targetLocale] || {};\n    format = numberFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type);\n    from = to;\n  } // checking format and target locale\n\n\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n\n  let id = `${targetLocale}__${key}`;\n\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n\n  let formatter = __numberFormatters.get(id);\n\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n\n    __numberFormatters.set(id, formatter);\n  }\n\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\n\n\nfunction parseNumberArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  let options = {};\n  let overrides = {};\n\n  if (!isNumber(arg1)) {\n    throw createCoreError(14\n    /* INVALID_ARGUMENT */\n    );\n  }\n\n  const value = arg1;\n\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    options = arg2;\n  }\n\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\n\n\nfunction clearNumberFormat(ctx, locale, format) {\n  const context = ctx;\n\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n\n    if (!context.__numberFormatters.has(id)) {\n      continue;\n    }\n\n    context.__numberFormatters.delete(id);\n  }\n}\n\n{\n  if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n  }\n}\nexport { MISSING_RESOLVE_VALUE, NOT_REOSLVED, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compileToFunction, createCoreContext, createCoreError, datetime, getAdditionalMeta, getDevToolsHook, getLocaleChain, getWarnMessage, handleMissing, initI18nDevTools, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerMessageCompiler, setAdditionalMeta, setDevToolsHook, translate, translateDevTools, updateFallbackLocale };","map":{"version":3,"sources":["/Users/milo/Documents/Diverse/meteo ui/stbar2/node_modules/@intlify/core-base/dist/core-base.esm-bundler.js"],"names":["format","isString","isArray","isPlainObject","assign","isFunction","isBoolean","isRegExp","warn","isObject","escapeHtml","inBrowser","mark","measure","generateCodeFrame","generateFormatCacheKey","isNumber","isEmptyObject","isDate","getGlobalThis","resolveValue","createMessageContext","defaultOnError","baseCompile","createCompileError","IntlifyDevToolsHooks","devtools","setDevToolsHook","hook","getDevToolsHook","initI18nDevTools","i18n","version","meta","emit","I18nInit","timestamp","Date","now","translateDevTools","createDevToolsHook","FunctionTranslate","payloads","warnMessages","getWarnMessage","code","args","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","getDefaultLinkedModifiers","upper","val","toUpperCase","lower","toLowerCase","capitalize","charAt","toLocaleUpperCase","substr","_compiler","registerMessageCompiler","compiler","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_cid","createCoreContext","options","locale","fallbackLocale","messages","datetimeFormats","numberFormats","modifiers","pluralRules","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","processor","warnHtmlMessage","escapeParameter","messageCompiler","onWarn","internalOptions","__datetimeFormatters","Map","__numberFormatters","__meta","context","cid","process","env","NODE_ENV","__v_emitter","undefined","__INTLIFY_PROD_DEVTOOLS__","isTranslateFallbackWarn","fallback","key","RegExp","test","isTranslateMissingWarn","handleMissing","type","emitter","groupId","ret","getLocaleChain","ctx","start","__localeChainCache","chain","get","block","appendBlockToChain","defaults","set","blocks","follow","i","length","appendLocaleToChain","tokens","split","target","join","appendItemToChain","splice","includes","replace","push","updateFallbackLocale","RE_HTML_TAG","WARN_MESSAGE","checkHtmlMessage","source","defaultOnCacheKey","compileCache","Object","create","clearCompileCache","compileToFunction","onCacheKey","cached","occurred","onError","err","msg","Function","createCoreError","errorMessages","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","escapeParams","targetLocale","message","resolveMessageFormat","cacheBaseKey","errorDetector","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","list","map","item","named","keys","forEach","locales","from","to","startTag","endTag","window","performance","end","time","missingRet","getCompileOptions","msgCtx","value","arg1","arg2","arg3","String","plural","codeFrame","location","offset","error","console","resolveMessage","pluralIndex","intlDefined","Intl","Availabilities","dateTimeFormat","DateTimeFormat","numberFormat","NumberFormat","datetime","overrides","parseDateTimeArgs","part","datetimeFormat","id","JSON","stringify","formatter","formatToParts","arg4","toISOString","e","isNaN","getTime","clearDateTimeFormat","has","delete","number","parseNumberArgs","clearNumberFormat"],"mappings":"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","sourcesContent":["/*!\n  * @intlify/core-base v9.1.9\n  * (c) 2021 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { format, isString, isArray, isPlainObject, assign, isFunction, isBoolean, isRegExp, warn, isObject, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey, isNumber, isEmptyObject, isDate, getGlobalThis } from '@intlify/shared';\nimport { resolveValue } from '@intlify/message-resolver';\nexport * from '@intlify/message-resolver';\nimport { createMessageContext } from '@intlify/runtime';\nexport * from '@intlify/runtime';\nimport { defaultOnError, baseCompile, createCompileError } from '@intlify/message-compiler';\nexport { createCompileError } from '@intlify/message-compiler';\nimport { IntlifyDevToolsHooks } from '@intlify/devtools-if';\n\nlet devtools = null;\r\nfunction setDevToolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction getDevToolsHook() {\r\n    return devtools;\r\n}\r\nfunction initI18nDevTools(i18n, version, meta) {\r\n    // TODO: queue if devtools is undefined\r\n    devtools &&\r\n        devtools.emit(IntlifyDevToolsHooks.I18nInit, {\r\n            timestamp: Date.now(),\r\n            i18n,\r\n            version,\r\n            meta\r\n        });\r\n}\r\nconst translateDevTools = /* #__PURE__*/ createDevToolsHook(IntlifyDevToolsHooks.FunctionTranslate);\r\nfunction createDevToolsHook(hook) {\r\n    return (payloads) => devtools && devtools.emit(hook, payloads);\r\n}\n\n/** @internal */\r\nconst warnMessages = {\r\n    [0 /* NOT_FOUND_KEY */]: `Not found '{key}' key in '{locale}' locale messages.`,\r\n    [1 /* FALLBACK_TO_TRANSLATE */]: `Fall back to translate '{key}' key with '{target}' locale.`,\r\n    [2 /* CANNOT_FORMAT_NUMBER */]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\r\n    [3 /* FALLBACK_TO_NUMBER_FORMAT */]: `Fall back to number format '{key}' key with '{target}' locale.`,\r\n    [4 /* CANNOT_FORMAT_DATE */]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\r\n    [5 /* FALLBACK_TO_DATE_FORMAT */]: `Fall back to datetime format '{key}' key with '{target}' locale.`\r\n};\r\nfunction getWarnMessage(code, ...args) {\r\n    return format(warnMessages[code], ...args);\r\n}\n\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\r\nconst VERSION = '9.1.9';\r\nconst NOT_REOSLVED = -1;\r\nconst MISSING_RESOLVE_VALUE = '';\r\nfunction getDefaultLinkedModifiers() {\r\n    return {\r\n        upper: (val) => (isString(val) ? val.toUpperCase() : val),\r\n        lower: (val) => (isString(val) ? val.toLowerCase() : val),\r\n        // prettier-ignore\r\n        capitalize: (val) => (isString(val)\r\n            ? `${val.charAt(0).toLocaleUpperCase()}${val.substr(1)}`\r\n            : val)\r\n    };\r\n}\r\nlet _compiler;\r\nfunction registerMessageCompiler(compiler) {\r\n    _compiler = compiler;\r\n}\r\n// Additional Meta for Intlify DevTools\r\nlet _additionalMeta = null;\r\nconst setAdditionalMeta = /* #__PURE__*/ (meta) => {\r\n    _additionalMeta = meta;\r\n};\r\nconst getAdditionalMeta = /* #__PURE__*/ () => _additionalMeta;\r\n// ID for CoreContext\r\nlet _cid = 0;\r\nfunction createCoreContext(options = {}) {\r\n    // setup options\r\n    const version = isString(options.version) ? options.version : VERSION;\r\n    const locale = isString(options.locale) ? options.locale : 'en-US';\r\n    const fallbackLocale = isArray(options.fallbackLocale) ||\r\n        isPlainObject(options.fallbackLocale) ||\r\n        isString(options.fallbackLocale) ||\r\n        options.fallbackLocale === false\r\n        ? options.fallbackLocale\r\n        : locale;\r\n    const messages = isPlainObject(options.messages)\r\n        ? options.messages\r\n        : { [locale]: {} };\r\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\r\n        ? options.datetimeFormats\r\n        : { [locale]: {} };\r\n    const numberFormats = isPlainObject(options.numberFormats)\r\n        ? options.numberFormats\r\n        : { [locale]: {} };\r\n    const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\r\n    const pluralRules = options.pluralRules || {};\r\n    const missing = isFunction(options.missing) ? options.missing : null;\r\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\r\n        ? options.missingWarn\r\n        : true;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : true;\r\n    const fallbackFormat = !!options.fallbackFormat;\r\n    const unresolving = !!options.unresolving;\r\n    const postTranslation = isFunction(options.postTranslation)\r\n        ? options.postTranslation\r\n        : null;\r\n    const processor = isPlainObject(options.processor) ? options.processor : null;\r\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    const escapeParameter = !!options.escapeParameter;\r\n    const messageCompiler = isFunction(options.messageCompiler)\r\n        ? options.messageCompiler\r\n        : _compiler;\r\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\r\n    // setup internal options\r\n    const internalOptions = options;\r\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\r\n        ? internalOptions.__datetimeFormatters\r\n        : new Map();\r\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\r\n        ? internalOptions.__numberFormatters\r\n        : new Map();\r\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\r\n    _cid++;\r\n    const context = {\r\n        version,\r\n        cid: _cid,\r\n        locale,\r\n        fallbackLocale,\r\n        messages,\r\n        datetimeFormats,\r\n        numberFormats,\r\n        modifiers,\r\n        pluralRules,\r\n        missing,\r\n        missingWarn,\r\n        fallbackWarn,\r\n        fallbackFormat,\r\n        unresolving,\r\n        postTranslation,\r\n        processor,\r\n        warnHtmlMessage,\r\n        escapeParameter,\r\n        messageCompiler,\r\n        onWarn,\r\n        __datetimeFormatters,\r\n        __numberFormatters,\r\n        __meta\r\n    };\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        context.__v_emitter =\r\n            internalOptions.__v_emitter != null\r\n                ? internalOptions.__v_emitter\r\n                : undefined;\r\n    }\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        initI18nDevTools(context, version, __meta);\r\n    }\r\n    return context;\r\n}\r\n/** @internal */\r\nfunction isTranslateFallbackWarn(fallback, key) {\r\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\r\n}\r\n/** @internal */\r\nfunction isTranslateMissingWarn(missing, key) {\r\n    return missing instanceof RegExp ? missing.test(key) : missing;\r\n}\r\n/** @internal */\r\nfunction handleMissing(context, key, locale, missingWarn, type) {\r\n    const { missing, onWarn } = context;\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const emitter = context.__v_emitter;\r\n        if (emitter) {\r\n            emitter.emit(\"missing\" /* MISSING */, {\r\n                locale,\r\n                key,\r\n                type,\r\n                groupId: `${type}:${key}`\r\n            });\r\n        }\r\n    }\r\n    if (missing !== null) {\r\n        const ret = missing(context, locale, key, type);\r\n        return isString(ret) ? ret : key;\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\r\n            onWarn(getWarnMessage(0 /* NOT_FOUND_KEY */, { key, locale }));\r\n        }\r\n        return key;\r\n    }\r\n}\r\n/** @internal */\r\nfunction getLocaleChain(ctx, fallback, start) {\r\n    const context = ctx;\r\n    if (!context.__localeChainCache) {\r\n        context.__localeChainCache = new Map();\r\n    }\r\n    let chain = context.__localeChainCache.get(start);\r\n    if (!chain) {\r\n        chain = [];\r\n        // first block defined by start\r\n        let block = [start];\r\n        // while any intervening block found\r\n        while (isArray(block)) {\r\n            block = appendBlockToChain(chain, block, fallback);\r\n        }\r\n        // prettier-ignore\r\n        // last block defined by default\r\n        const defaults = isArray(fallback)\r\n            ? fallback\r\n            : isPlainObject(fallback)\r\n                ? fallback['default']\r\n                    ? fallback['default']\r\n                    : null\r\n                : fallback;\r\n        // convert defaults to array\r\n        block = isString(defaults) ? [defaults] : defaults;\r\n        if (isArray(block)) {\r\n            appendBlockToChain(chain, block, false);\r\n        }\r\n        context.__localeChainCache.set(start, chain);\r\n    }\r\n    return chain;\r\n}\r\nfunction appendBlockToChain(chain, block, blocks) {\r\n    let follow = true;\r\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\r\n        const locale = block[i];\r\n        if (isString(locale)) {\r\n            follow = appendLocaleToChain(chain, block[i], blocks);\r\n        }\r\n    }\r\n    return follow;\r\n}\r\nfunction appendLocaleToChain(chain, locale, blocks) {\r\n    let follow;\r\n    const tokens = locale.split('-');\r\n    do {\r\n        const target = tokens.join('-');\r\n        follow = appendItemToChain(chain, target, blocks);\r\n        tokens.splice(-1, 1);\r\n    } while (tokens.length && follow === true);\r\n    return follow;\r\n}\r\nfunction appendItemToChain(chain, target, blocks) {\r\n    let follow = false;\r\n    if (!chain.includes(target)) {\r\n        follow = true;\r\n        if (target) {\r\n            follow = target[target.length - 1] !== '!';\r\n            const locale = target.replace(/!/g, '');\r\n            chain.push(locale);\r\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\r\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\r\n            ) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                follow = blocks[locale];\r\n            }\r\n        }\r\n    }\r\n    return follow;\r\n}\r\n/** @internal */\r\nfunction updateFallbackLocale(ctx, locale, fallback) {\r\n    const context = ctx;\r\n    context.__localeChainCache = new Map();\r\n    getLocaleChain(ctx, fallback, locale);\r\n}\n\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\r\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\r\nfunction checkHtmlMessage(source, options) {\r\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    if (warnHtmlMessage && RE_HTML_TAG.test(source)) {\r\n        warn(format(WARN_MESSAGE, { source }));\r\n    }\r\n}\r\nconst defaultOnCacheKey = (source) => source;\r\nlet compileCache = Object.create(null);\r\nfunction clearCompileCache() {\r\n    compileCache = Object.create(null);\r\n}\r\nfunction compileToFunction(source, options = {}) {\r\n    {\r\n        // check HTML message\r\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(source, options);\r\n        // check caches\r\n        const onCacheKey = options.onCacheKey || defaultOnCacheKey;\r\n        const key = onCacheKey(source);\r\n        const cached = compileCache[key];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        // compile error detecting\r\n        let occurred = false;\r\n        const onError = options.onError || defaultOnError;\r\n        options.onError = (err) => {\r\n            occurred = true;\r\n            onError(err);\r\n        };\r\n        // compile\r\n        const { code } = baseCompile(source, options);\r\n        // evaluate function\r\n        const msg = new Function(`return ${code}`)();\r\n        // if occurred compile error, don't cache\r\n        return !occurred ? (compileCache[key] = msg) : msg;\r\n    }\r\n}\n\nfunction createCoreError(code) {\r\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\r\n}\r\n/** @internal */\r\nconst errorMessages = {\r\n    [14 /* INVALID_ARGUMENT */]: 'Invalid arguments',\r\n    [15 /* INVALID_DATE_ARGUMENT */]: 'The date provided is an invalid Date object.' +\r\n        'Make sure your Date represents a valid date.',\r\n    [16 /* INVALID_ISO_DATE_ARGUMENT */]: 'The argument provided is not a valid ISO date string'\r\n};\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\r\nconst isMessageFunction = (val) => isFunction(val);\r\n// implementation of `translate` function\r\nfunction translate(context, ...args) {\r\n    const { fallbackFormat, postTranslation, unresolving, fallbackLocale, messages } = context;\r\n    const [key, options] = parseTranslateArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const escapeParameter = isBoolean(options.escapeParameter)\r\n        ? options.escapeParameter\r\n        : context.escapeParameter;\r\n    const resolvedMessage = !!options.resolvedMessage;\r\n    // prettier-ignore\r\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\r\n        ? !isBoolean(options.default)\r\n            ? options.default\r\n            : key\r\n        : fallbackFormat // default by `fallbackFormat` option\r\n            ? key\r\n            : '';\r\n    const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    // escape params\r\n    escapeParameter && escapeParams(options);\r\n    // resolve message format\r\n    // eslint-disable-next-line prefer-const\r\n    let [format, targetLocale, message] = !resolvedMessage\r\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\r\n        : [\r\n            key,\r\n            locale,\r\n            messages[locale] || {}\r\n        ];\r\n    // if you use default message, set it as message format!\r\n    let cacheBaseKey = key;\r\n    if (!resolvedMessage &&\r\n        !(isString(format) || isMessageFunction(format))) {\r\n        if (enableDefaultMsg) {\r\n            format = defaultMsgOrKey;\r\n            cacheBaseKey = format;\r\n        }\r\n    }\r\n    // checking message format and target locale\r\n    if (!resolvedMessage &&\r\n        (!(isString(format) || isMessageFunction(format)) ||\r\n            !isString(targetLocale))) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\r\n        warn(`The message format compilation is not supported in this build. ` +\r\n            `Because message compiler isn't included. ` +\r\n            `You need to pre-compilation all message format. ` +\r\n            `So translate function return '${key}'.`);\r\n        return key;\r\n    }\r\n    // setup compile error detecting\r\n    let occurred = false;\r\n    const errorDetector = () => {\r\n        occurred = true;\r\n    };\r\n    // compile message format\r\n    const msg = !isMessageFunction(format)\r\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector)\r\n        : format;\r\n    // if occurred compile error, return the message format\r\n    if (occurred) {\r\n        return format;\r\n    }\r\n    // evaluate message with context\r\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\r\n    const msgContext = createMessageContext(ctxOptions);\r\n    const messaged = evaluateMessage(context, msg, msgContext);\r\n    // if use post translation option, proceed it with handler\r\n    const ret = postTranslation ? postTranslation(messaged) : messaged;\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        // prettier-ignore\r\n        const payloads = {\r\n            timestamp: Date.now(),\r\n            key: isString(key)\r\n                ? key\r\n                : isMessageFunction(format)\r\n                    ? format.key\r\n                    : '',\r\n            locale: targetLocale || (isMessageFunction(format)\r\n                ? format.locale\r\n                : ''),\r\n            format: isString(format)\r\n                ? format\r\n                : isMessageFunction(format)\r\n                    ? format.source\r\n                    : '',\r\n            message: ret\r\n        };\r\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\r\n        translateDevTools(payloads);\r\n    }\r\n    return ret;\r\n}\r\nfunction escapeParams(options) {\r\n    if (isArray(options.list)) {\r\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\r\n    }\r\n    else if (isObject(options.named)) {\r\n        Object.keys(options.named).forEach(key => {\r\n            if (isString(options.named[key])) {\r\n                options.named[key] = escapeHtml(options.named[key]);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\r\n    const { messages, onWarn } = context;\r\n    const locales = getLocaleChain(context, fallbackLocale, locale);\r\n    let message = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'translate';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(1 /* FALLBACK_TO_TRANSLATE */, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        message =\r\n            messages[targetLocale] || {};\r\n        // for vue-devtools timeline event\r\n        let start = null;\r\n        let startTag;\r\n        let endTag;\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            start = window.performance.now();\r\n            startTag = 'intlify-message-resolve-start';\r\n            endTag = 'intlify-message-resolve-end';\r\n            mark && mark(startTag);\r\n        }\r\n        if ((format = resolveValue(message, key)) === null) {\r\n            // if null, resolve with object key path\r\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            const end = window.performance.now();\r\n            const emitter = context.__v_emitter;\r\n            if (emitter && start && format) {\r\n                emitter.emit(\"message-resolve\" /* MESSAGE_RESOLVE */, {\r\n                    type: \"message-resolve\" /* MESSAGE_RESOLVE */,\r\n                    key,\r\n                    message: format,\r\n                    time: end - start,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n            if (startTag && endTag && mark && measure) {\r\n                mark(endTag);\r\n                measure('intlify message resolve', startTag, endTag);\r\n            }\r\n        }\r\n        if (isString(format) || isFunction(format))\r\n            break;\r\n        const missingRet = handleMissing(context, key, targetLocale, missingWarn, type);\r\n        if (missingRet !== key) {\r\n            format = missingRet;\r\n        }\r\n        from = to;\r\n    }\r\n    return [format, targetLocale, message];\r\n}\r\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) {\r\n    const { messageCompiler, warnHtmlMessage } = context;\r\n    if (isMessageFunction(format)) {\r\n        const msg = format;\r\n        msg.locale = msg.locale || targetLocale;\r\n        msg.key = msg.key || key;\r\n        return msg;\r\n    }\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-compilation-start';\r\n        endTag = 'intlify-message-compilation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const msg = messageCompiler(format, getCompileOptions(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, errorDetector));\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit(\"message-compilation\" /* MESSAGE_COMPILATION */, {\r\n                type: \"message-compilation\" /* MESSAGE_COMPILATION */,\r\n                message: format,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message compilation', startTag, endTag);\r\n        }\r\n    }\r\n    msg.locale = targetLocale;\r\n    msg.key = key;\r\n    msg.source = format;\r\n    return msg;\r\n}\r\nfunction evaluateMessage(context, msg, msgCtx) {\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-evaluation-start';\r\n        endTag = 'intlify-message-evaluation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const messaged = msg(msgCtx);\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit(\"message-evaluation\" /* MESSAGE_EVALUATION */, {\r\n                type: \"message-evaluation\" /* MESSAGE_EVALUATION */,\r\n                value: messaged,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${msg.key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message evaluation', startTag, endTag);\r\n        }\r\n    }\r\n    return messaged;\r\n}\r\n/** @internal */\r\nfunction parseTranslateArgs(...args) {\r\n    const [arg1, arg2, arg3] = args;\r\n    const options = {};\r\n    if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1)) {\r\n        throw createCoreError(14 /* INVALID_ARGUMENT */);\r\n    }\r\n    // prettier-ignore\r\n    const key = isNumber(arg1)\r\n        ? String(arg1)\r\n        : isMessageFunction(arg1)\r\n            ? arg1\r\n            : arg1;\r\n    if (isNumber(arg2)) {\r\n        options.plural = arg2;\r\n    }\r\n    else if (isString(arg2)) {\r\n        options.default = arg2;\r\n    }\r\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\r\n        options.named = arg2;\r\n    }\r\n    else if (isArray(arg2)) {\r\n        options.list = arg2;\r\n    }\r\n    if (isNumber(arg3)) {\r\n        options.plural = arg3;\r\n    }\r\n    else if (isString(arg3)) {\r\n        options.default = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        assign(options, arg3);\r\n    }\r\n    return [key, options];\r\n}\r\nfunction getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {\r\n    return {\r\n        warnHtmlMessage,\r\n        onError: (err) => {\r\n            errorDetector && errorDetector(err);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const message = `Message compilation error: ${err.message}`;\r\n                const codeFrame = err.location &&\r\n                    generateCodeFrame(source, err.location.start.offset, err.location.end.offset);\r\n                const emitter = context\r\n                    .__v_emitter;\r\n                if (emitter) {\r\n                    emitter.emit(\"compile-error\" /* COMPILE_ERROR */, {\r\n                        message: source,\r\n                        error: err.message,\r\n                        start: err.location && err.location.start.offset,\r\n                        end: err.location && err.location.end.offset,\r\n                        groupId: `${'translate'}:${key}`\r\n                    });\r\n                }\r\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        },\r\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\r\n    };\r\n}\r\nfunction getMessageContextOptions(context, locale, message, options) {\r\n    const { modifiers, pluralRules } = context;\r\n    const resolveMessage = (key) => {\r\n        const val = resolveValue(message, key);\r\n        if (isString(val)) {\r\n            let occurred = false;\r\n            const errorDetector = () => {\r\n                occurred = true;\r\n            };\r\n            const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);\r\n            return !occurred\r\n                ? msg\r\n                : NOOP_MESSAGE_FUNCTION;\r\n        }\r\n        else if (isMessageFunction(val)) {\r\n            return val;\r\n        }\r\n        else {\r\n            // TODO: should be implemented warning message\r\n            return NOOP_MESSAGE_FUNCTION;\r\n        }\r\n    };\r\n    const ctxOptions = {\r\n        locale,\r\n        modifiers,\r\n        pluralRules,\r\n        messages: resolveMessage\r\n    };\r\n    if (context.processor) {\r\n        ctxOptions.processor = context.processor;\r\n    }\r\n    if (options.list) {\r\n        ctxOptions.list = options.list;\r\n    }\r\n    if (options.named) {\r\n        ctxOptions.named = options.named;\r\n    }\r\n    if (isNumber(options.plural)) {\r\n        ctxOptions.pluralIndex = options.plural;\r\n    }\r\n    return ctxOptions;\r\n}\n\nconst intlDefined = typeof Intl !== 'undefined';\r\nconst Availabilities = {\r\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\r\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\r\n};\n\n// implementation of `datetime` function\r\nfunction datetime(context, ...args) {\r\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn } = context;\r\n    const { __datetimeFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\r\n        onWarn(getWarnMessage(4 /* CANNOT_FORMAT_DATE */));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    const locales = getLocaleChain(context, fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.DateTimeFormat(locale).format(value);\r\n    }\r\n    // resolve format\r\n    let datetimeFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'datetime format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(5 /* FALLBACK_TO_DATE_FORMAT */, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        datetimeFormat =\r\n            datetimeFormats[targetLocale] || {};\r\n        format = datetimeFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type);\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __datetimeFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\r\n        __datetimeFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nfunction parseDateTimeArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    let options = {};\r\n    let overrides = {};\r\n    let value;\r\n    if (isString(arg1)) {\r\n        // Only allow ISO strings - other date formats are often supported,\r\n        // but may cause different results in different browsers.\r\n        if (!/\\d{4}-\\d{2}-\\d{2}(T.*)?/.test(arg1)) {\r\n            throw createCoreError(16 /* INVALID_ISO_DATE_ARGUMENT */);\r\n        }\r\n        value = new Date(arg1);\r\n        try {\r\n            // This will fail if the date is not valid\r\n            value.toISOString();\r\n        }\r\n        catch (e) {\r\n            throw createCoreError(16 /* INVALID_ISO_DATE_ARGUMENT */);\r\n        }\r\n    }\r\n    else if (isDate(arg1)) {\r\n        if (isNaN(arg1.getTime())) {\r\n            throw createCoreError(15 /* INVALID_DATE_ARGUMENT */);\r\n        }\r\n        value = arg1;\r\n    }\r\n    else if (isNumber(arg1)) {\r\n        value = arg1;\r\n    }\r\n    else {\r\n        throw createCoreError(14 /* INVALID_ARGUMENT */);\r\n    }\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        options = arg2;\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearDateTimeFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__datetimeFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__datetimeFormatters.delete(id);\r\n    }\r\n}\n\n// implementation of `number` function\r\nfunction number(context, ...args) {\r\n    const { numberFormats, unresolving, fallbackLocale, onWarn } = context;\r\n    const { __numberFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\r\n        onWarn(getWarnMessage(2 /* CANNOT_FORMAT_NUMBER */));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseNumberArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    const locales = getLocaleChain(context, fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.NumberFormat(locale).format(value);\r\n    }\r\n    // resolve format\r\n    let numberFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'number format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(3 /* FALLBACK_TO_NUMBER_FORMAT */, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        numberFormat =\r\n            numberFormats[targetLocale] || {};\r\n        format = numberFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type);\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __numberFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\r\n        __numberFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nfunction parseNumberArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    let options = {};\r\n    let overrides = {};\r\n    if (!isNumber(arg1)) {\r\n        throw createCoreError(14 /* INVALID_ARGUMENT */);\r\n    }\r\n    const value = arg1;\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        options = arg2;\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearNumberFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__numberFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__numberFormatters.delete(id);\r\n    }\r\n}\n\n{\r\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\r\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\r\n    }\r\n}\n\nexport { MISSING_RESOLVE_VALUE, NOT_REOSLVED, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compileToFunction, createCoreContext, createCoreError, datetime, getAdditionalMeta, getDevToolsHook, getLocaleChain, getWarnMessage, handleMissing, initI18nDevTools, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerMessageCompiler, setAdditionalMeta, setDevToolsHook, translate, translateDevTools, updateFallbackLocale };\n"]},"metadata":{},"sourceType":"module"}