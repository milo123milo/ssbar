{"ast":null,"code":"import { useI18n } from 'vue-i18n';\nimport { useQuery } from 'villus';\nimport Markdown from 'vue3-markdown-it';\nexport default {\n  name: \"oldtowncontent\",\n  components: {\n    Markdown\n  },\n\n  setup() {\n    const {\n      t\n    } = useI18n({});\n    const naslov = t('apiN');\n    const sadrzaj = t('apiS');\n    const autor = t('apiAut');\n    const stbar = `\n    query{\n  stariGrad {\n    data {\n      attributes {\n        Citat {\n          ${autor}\n          ${sadrzaj}\n        }\n        Stavka1 {\n          ${naslov}\n          ${sadrzaj}\n        }\n        Stavka2 {\n          ${naslov}\n          ${sadrzaj}\n        }\n        Stavka3 {\n          ${naslov}\n          ${sadrzaj}\n        }\n        \n      }\n    }\n  }\n}\n    `;\n    const {\n      data\n    } = useQuery({\n      query: stbar\n    });\n    return {\n      data\n    };\n  },\n\n  mounted() {\n    const {\n      t\n    } = useI18n({});\n\n    if (t('curLang') == 'en') {\n      const stari = document.body.querySelector('.stari');\n      stari.classList.add('starien');\n      const grad = document.body.querySelector('.grad');\n      grad.classList.add('graden');\n    }\n\n    const observer1 = new IntersectionObserver(entries => {\n      // Loop over the entries\n      entries.forEach(entry => {\n        // If the element is visible\n        if (entry.isIntersecting) {\n          // Add the animation class\n          entry.target.classList.add('quoteL');\n        }\n      });\n    });\n    observer1.observe(document.querySelector('.left'));\n    const observer2 = new IntersectionObserver(entries => {\n      // Loop over the entries\n      entries.forEach(entry => {\n        // If the element is visible\n        if (entry.isIntersecting) {\n          // Add the animation class\n          entry.target.classList.add('quoteR');\n        }\n      });\n    });\n    observer2.observe(document.querySelector('.right'));\n    const observer3 = new IntersectionObserver(entries => {\n      // Loop over the entries\n      entries.forEach(entry => {\n        // If the element is visible\n        if (entry.isIntersecting) {\n          // Add the animation class\n          entry.target.classList.add('textup');\n        }\n      });\n    });\n    observer3.observe(document.querySelector('.text'));\n    const observer4 = new IntersectionObserver(entries => {\n      // Loop over the entries\n      entries.forEach(entry => {\n        // If the element is visible\n        if (entry.isIntersecting) {\n          // Add the animation class\n          entry.target.classList.add('line');\n        }\n      });\n    });\n    observer4.observe(document.querySelector('.breaker'));\n    const observer5 = new IntersectionObserver(entries => {\n      // Loop over the entries\n      entries.forEach(entry => {\n        // If the element is visible\n        if (entry.isIntersecting) {\n          // Add the animation class\n          entry.target.classList.add('opas');\n        }\n      });\n    });\n    observer5.observe(document.querySelector('.contents'));\n    const observer6 = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        const square = entry.target.querySelector('.text');\n\n        if (entry.isIntersecting) {\n          square.classList.add('textup');\n          return; // if we added the class, exit the function\n        } // We're not intersecting, so remove the class!\n\n\n        square.classList.remove('textup');\n      });\n    });\n    observer6.observe(document.querySelector('.box'));\n  }\n\n};","map":{"version":3,"mappings":"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","names":["useI18n","useQuery","Markdown","name","components","setup","t","naslov","sadrzaj","autor","stbar","data","query","mounted","stari","document","body","querySelector","classList","add","grad","observer1","IntersectionObserver","entries","forEach","entry","isIntersecting","target","observe","observer2","observer3","observer4","observer5","observer6","square","remove"],"sourceRoot":"","sources":["/Users/milo/Documents/Diverse/meteo ui/stbar2/src/components/OldTownContent.vue"],"sourcesContent":["<template>\n    <div  class=\"oldtowncontent\">\n        <div   class=\"quote\">\n            \n            <img class=\"marks left\"  src=\"@/assets/quote.png\" alt=\"\">\n            <img class=\"marks right\" src=\"@/assets/quote.png\" alt=\"\">\n            <div class=\"box textup\">\n            <div  v-if=\"data\" id=\"textbox\" class=\"text \">\n                {{ data.stariGrad.data.attributes.Citat[$t('apiS')] }}\n                <div v-if=\"data\" class=\"autor\">\n                    {{ data.stariGrad.data.attributes.Citat[$t('apiAut')] }}\n                </div>\n            </div>\n            \n            <div  v-else class=\"text\">\n              ****\n            </div>\n            </div>\n        </div>\n        <div class=\"breaker\"></div>\n        <div class=\"contents\">\n            <div class=\"c\">\n                <div v-if=\"data\" class=\"naslov\">\n                    {{ data.stariGrad.data.attributes.Stavka1[$t('apiN')]}}\n                </div>\n                <Markdown v-if=\"data\" class=\"sadrzaj\" :source=\"data.stariGrad.data.attributes.Stavka1[$t('apiS')]\"/>\n\n                <div v-if=\"data\" class=\"naslov\">\n                    {{ data.stariGrad.data.attributes.Stavka2[$t('apiN')] }}\n                </div>\n                <Markdown v-if=\"data\" class=\"sadrzaj\" :source=\"data.stariGrad.data.attributes.Stavka2[$t('apiS')]\"/>\n\n                <div v-if=\"data\" class=\"naslov\">\n                    {{ data.stariGrad.data.attributes.Stavka3[$t('apiN')]}}\n                </div>\n                <Markdown v-if=\"data\" class=\"sadrzaj\" :source=\"data.stariGrad.data.attributes.Stavka3[$t('apiS')]\"/>\n\n            </div>\n           \n        </div>\n    </div>\n</template>\n\n<style scoped>\n\n.box {\ntop: 32%;\n    width: 40%;\n    position: absolute;\n}\n@keyframes opas{\n   0% {\n   opacity: 0;\n   }\n  100% {\nopacity: 1;\n}\n   }\n\n.opas {\n    animation: opas 1.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n}\n.sadrzaj {\n    font-family: 'Helvetica-Lt';\n}\n.naslov {\n    margin-top: 5%;\n    font-size: 1.5rem;\n    padding-bottom: 10px;\n}\n.contents {\n    animation-delay: 0.3s;\n    padding-bottom: 50px;\n    display: flex;\n    position: absolute;\n    margin-top: 5%;\n    justify-content: center;\n}\n\n.c {\n    width: 75%;\n    text-align: left;\n}\n@keyframes line{\n   0% {\n    width: 0;\n  }\n  100% {\n    width: 80%;\n  }\n    \n}\n.line {\n    animation: line 1.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n}\n.breaker {\n    transform: translateX(-50%);\n    position: absolute;\n    margin-top: 4.5%;\n   \n    left: 50%;\n    opacity: 0.1;\n    width: 70%;\n    background-color: #041F30;\n    height: 2px;\n}\n@keyframes textup{\n   0% {\n    opacity: 0;\n    transform: translateY(50px) ;\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n    \n}\n.textup {\n    animation: textup 1.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n}\n@keyframes quoteL{\n   0% {\n    transform: translateX(50px) ;\n  }\n  100% {\n    transform: translateX(0px);\n  }\n    \n}\n.quoteL {\n    animation: quoteL 1.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n}\n@keyframes quoteR{\n   0% {\n    transform: translateX(-50px) rotate(180deg);;\n  }\n  100% {\n    transform: translateX(0px) rotate(180deg);;\n  }\n    \n}\n.quoteR {\n    animation: quoteR 1.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n}\n.autor {\n    font-style: normal;\n    font-family: 'Helvetica';\n    padding-top: 10px;\n    font-size: 1.3rem;\n}\n.text {\n    font-weight: bold;\n    animation-delay: 0.1s;\n    font-family: \"Helvetica-Lt\";\n    color: #041F30;\n    top: 32%;\n       /* margin-left: 54px; */\n    position: absolute;\n    /* width: 40%; */\n    line-height: 1.2;\n    text-align: left;\n    font-size: 1.3rem;\n    font-style: italic;\n}\n.right {\n    transform: rotate(180deg);\n    margin-top: 243px !important;\n}\n.left {\n\n}\n.marks {\n    margin-inline: 17%;\n    margin-top: 80px;\n    object-fit: cover;\n    width: fit-content;\n    height: 80px;\n}\n.quote {\n    display: flex;\n    position: relative;\n    justify-content: center;\n}\n.oldtowncontent {\n    background-color: rgb(255, 255, 255);\n    width: 100%;\n    \n    height: fit-content;\n   \n}\n\n@font-face {\n  font-family: \"Helvetica-Md\";\n  src: local(\"Helvetica-md\"),\n   url(@/assets/HelveticaNowDisplay-Md.otf) format(\"opentype\");\n}\n@font-face {\n  font-family: \"Helvetica-Lt\";\n  src: local(\"Helvetica-lt\"),\n   url(@/assets/HelveticaNowDisplay-Lt.otf) format(\"opentype\");\n}\n@media (max-width: 992px) { \n    .text {\n        font-size: 0.8rem;\n    }\n    .box {\n        width: 70%;\n    }\n    .autor {\n        font-size: 1rem;\n    }\n    \n}\n</style>\n<script>\nimport { useI18n } from 'vue-i18n'\nimport { useQuery } from 'villus';\n\nimport Markdown from 'vue3-markdown-it';\n\nexport default {\n    name: \"oldtowncontent\",\n    components: {\n    \n    Markdown\n  },\n    setup() {\n    const { t } = useI18n({});\n    \n    const naslov = t('apiN');\n    const sadrzaj = t('apiS');\n    const autor = t('apiAut');\n    \n    const stbar = `\n    query{\n  stariGrad {\n    data {\n      attributes {\n        Citat {\n          ${autor}\n          ${sadrzaj}\n        }\n        Stavka1 {\n          ${naslov}\n          ${sadrzaj}\n        }\n        Stavka2 {\n          ${naslov}\n          ${sadrzaj}\n        }\n        Stavka3 {\n          ${naslov}\n          ${sadrzaj}\n        }\n        \n      }\n    }\n  }\n}\n    `;\n\n    const { data } = useQuery({\n      query: stbar,\n    });\n\n    return { data };\n\n    \n\n  },\n    mounted() {\n        const { t } = useI18n({});\n if(t('curLang') == 'en') {\n     const stari = document.body.querySelector('.stari');\n     stari.classList.add('starien');\n\n     const grad = document.body.querySelector('.grad');\n     grad.classList.add('graden');\n }\n        \n    const observer1 = new IntersectionObserver(entries => {\n  // Loop over the entries\n  entries.forEach(entry => {\n    // If the element is visible\n    if (entry.isIntersecting) {\n      // Add the animation class\n      entry.target.classList.add('quoteL');\n    }\n  });\n});\nobserver1.observe(document.querySelector('.left'));\n\nconst observer2 = new IntersectionObserver(entries => {\n  // Loop over the entries\n  entries.forEach(entry => {\n    // If the element is visible\n    if (entry.isIntersecting) {\n      // Add the animation class\n      entry.target.classList.add('quoteR');\n    }\n  });\n});\nobserver2.observe(document.querySelector('.right'));\n\nconst observer3 = new IntersectionObserver(entries => {\n  // Loop over the entries\n  entries.forEach(entry => {\n    // If the element is visible\n    if (entry.isIntersecting) {\n      // Add the animation class\n      entry.target.classList.add('textup');\n    }\n  });\n});\nobserver3.observe(document.querySelector('.text'));\n\nconst observer4 = new IntersectionObserver(entries => {\n  // Loop over the entries\n  entries.forEach(entry => {\n    // If the element is visible\n    if (entry.isIntersecting) {\n      // Add the animation class\n      entry.target.classList.add('line');\n    }\n  });\n});\nobserver4.observe(document.querySelector('.breaker'));\n\nconst observer5 = new IntersectionObserver(entries => {\n  // Loop over the entries\n  entries.forEach(entry => {\n    // If the element is visible\n    if (entry.isIntersecting) {\n      // Add the animation class\n      entry.target.classList.add('opas');\n    }\n  });\n});\nobserver5.observe(document.querySelector('.contents'));\n\nconst observer6 = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    const square = entry.target.querySelector('.text');\n\n    if (entry.isIntersecting) {\n      square.classList.add('textup');\n\t  return; // if we added the class, exit the function\n    }\n\n    // We're not intersecting, so remove the class!\n    square.classList.remove('textup');\n  });\n});\n\nobserver6.observe(document.querySelector('.box'));\n\n\n\n \n        \n    },\n    \n}\n</script>"]},"metadata":{},"sourceType":"module"}